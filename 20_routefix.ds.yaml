apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: '1'
  name: routefix
  namespace: openshift-azure-routefix
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: routefix
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: routefix
    spec:
      serviceAccount: routefix
      serviceAccountName: routefix
      hostNetwork: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      containers:
      - name: drop-icmp
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bcc1fb20f06f00829727cb46ff21e22103fd4c737fdcbbf2fab13121f31ebcbd
        args:
        - /bin/bash
        - -c
        - |
          set -xe

          echo "I$(date "+%m%d %H:%M:%S.%N") - drop-icmp - start drop-icmp ${K8S_NODE}"
          iptables -X CHECK_ICMP_SOURCE || true
          iptables -N CHECK_ICMP_SOURCE || true
          iptables -F CHECK_ICMP_SOURCE
          iptables -D INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE || true
          iptables -I INPUT -p icmp --icmp-type fragmentation-needed -j CHECK_ICMP_SOURCE
          iptables -N ICMP_ACTION || true
          iptables -F ICMP_ACTION
          iptables -A ICMP_ACTION -j LOG
          iptables -A ICMP_ACTION -j DROP
          oc observe nodes -a '{ .status.addresses[1].address }' -- /tmp/add_iptables.sh
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - echo drop-icmp done
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /
          name: host-slash
        - mountPath: /tmp/add_iptables.sh
          name: add-iptables
          subPath: add_iptables.sh
        resources:
          requests:
            cpu: 10m
            memory: 300Mi
        env:
        - name: K8S_NODE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
      - args:
        - /bin/bash
        - -c
        - |
          while true;
          do
              NOW=$(date "+%Y-%m-%d %H:%M:%S")
              DROPPED_PACKETS=$(ovs-ofctl -O OpenFlow13 dump-flows br0 | sed -ne '/table=10,.* actions=drop/ { s/.* n_packets=//; s/,.*//; p }')
              if [ "$DROPPED_PACKETS" != "" ] && [ "$DROPPED_PACKETS" -gt 1000 ];
              then
                  echo "$NOW table=10 actions=drop packets=$DROPPED_PACKETS broken=true"
              else
                  echo "$NOW table=10 actions=drop packets=$DROPPED_PACKETS broken=false"
              fi
              sleep 60
          done
        image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bcc1fb20f06f00829727cb46ff21e22103fd4c737fdcbbf2fab13121f31ebcbd
        imagePullPolicy: IfNotPresent
        name: detect
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /
          name: host-slash
          readOnly: true
      volumes:
      - name: host-slash
        hostPath:
          path: /
          type: ''
      - name: add-iptables
        configMap:
          defaultMode: 365
          name: add-iptables
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists

